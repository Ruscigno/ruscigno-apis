// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package mql5_background_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// OrderType: Order type
type OrderType int32

const (
	OrderType_ORDER_TYPE_BUY             OrderType = 0
	OrderType_ORDER_TYPE_SELL            OrderType = 1
	OrderType_ORDER_TYPE_BUY_LIMIT       OrderType = 2
	OrderType_ORDER_TYPE_SELL_LIMIT      OrderType = 3
	OrderType_ORDER_TYPE_BUY_STOP        OrderType = 4
	OrderType_ORDER_TYPE_SELL_STOP       OrderType = 5
	OrderType_ORDER_TYPE_BUY_STOP_LIMIT  OrderType = 6
	OrderType_ORDER_TYPE_SELL_STOP_LIMIT OrderType = 7
	OrderType_ORDER_TYPE_CLOSE_BY        OrderType = 8
)

var OrderType_name = map[int32]string{
	0: "ORDER_TYPE_BUY",
	1: "ORDER_TYPE_SELL",
	2: "ORDER_TYPE_BUY_LIMIT",
	3: "ORDER_TYPE_SELL_LIMIT",
	4: "ORDER_TYPE_BUY_STOP",
	5: "ORDER_TYPE_SELL_STOP",
	6: "ORDER_TYPE_BUY_STOP_LIMIT",
	7: "ORDER_TYPE_SELL_STOP_LIMIT",
	8: "ORDER_TYPE_CLOSE_BY",
}

var OrderType_value = map[string]int32{
	"ORDER_TYPE_BUY":             0,
	"ORDER_TYPE_SELL":            1,
	"ORDER_TYPE_BUY_LIMIT":       2,
	"ORDER_TYPE_SELL_LIMIT":      3,
	"ORDER_TYPE_BUY_STOP":        4,
	"ORDER_TYPE_SELL_STOP":       5,
	"ORDER_TYPE_BUY_STOP_LIMIT":  6,
	"ORDER_TYPE_SELL_STOP_LIMIT": 7,
	"ORDER_TYPE_CLOSE_BY":        8,
}

func (x OrderType) String() string {
	return proto.EnumName(OrderType_name, int32(x))
}

func (OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

// OrderType: Order state
type OrderState int32

const (
	OrderState_ORDER_STATE_STARTED        OrderState = 0
	OrderState_ORDER_STATE_PLACED         OrderState = 1
	OrderState_ORDER_STATE_CANCELED       OrderState = 2
	OrderState_ORDER_STATE_PARTIAL        OrderState = 3
	OrderState_ORDER_STATE_FILLED         OrderState = 4
	OrderState_ORDER_STATE_REJECTED       OrderState = 5
	OrderState_ORDER_STATE_EXPIRED        OrderState = 6
	OrderState_ORDER_STATE_REQUEST_ADD    OrderState = 7
	OrderState_ORDER_STATE_REQUEST_MODIFY OrderState = 8
	OrderState_ORDER_STATE_REQUEST_CANCEL OrderState = 9
)

var OrderState_name = map[int32]string{
	0: "ORDER_STATE_STARTED",
	1: "ORDER_STATE_PLACED",
	2: "ORDER_STATE_CANCELED",
	3: "ORDER_STATE_PARTIAL",
	4: "ORDER_STATE_FILLED",
	5: "ORDER_STATE_REJECTED",
	6: "ORDER_STATE_EXPIRED",
	7: "ORDER_STATE_REQUEST_ADD",
	8: "ORDER_STATE_REQUEST_MODIFY",
	9: "ORDER_STATE_REQUEST_CANCEL",
}

var OrderState_value = map[string]int32{
	"ORDER_STATE_STARTED":        0,
	"ORDER_STATE_PLACED":         1,
	"ORDER_STATE_CANCELED":       2,
	"ORDER_STATE_PARTIAL":        3,
	"ORDER_STATE_FILLED":         4,
	"ORDER_STATE_REJECTED":       5,
	"ORDER_STATE_EXPIRED":        6,
	"ORDER_STATE_REQUEST_ADD":    7,
	"ORDER_STATE_REQUEST_MODIFY": 8,
	"ORDER_STATE_REQUEST_CANCEL": 9,
}

func (x OrderState) String() string {
	return proto.EnumName(OrderState_name, int32(x))
}

func (OrderState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

// OrderFillingType: Order filling type
type OrderFillingType int32

const (
	OrderFillingType_ORDER_FILLING_FOK    OrderFillingType = 0
	OrderFillingType_ORDER_FILLING_IOC    OrderFillingType = 1
	OrderFillingType_ORDER_FILLING_RETURN OrderFillingType = 2
)

var OrderFillingType_name = map[int32]string{
	0: "ORDER_FILLING_FOK",
	1: "ORDER_FILLING_IOC",
	2: "ORDER_FILLING_RETURN",
}

var OrderFillingType_value = map[string]int32{
	"ORDER_FILLING_FOK":    0,
	"ORDER_FILLING_IOC":    1,
	"ORDER_FILLING_RETURN": 2,
}

func (x OrderFillingType) String() string {
	return proto.EnumName(OrderFillingType_name, int32(x))
}

func (OrderFillingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

// OrderTypeTime: Order lifetime
type OrderTypeTime int32

const (
	OrderTypeTime_ORDER_TIME_GTC           OrderTypeTime = 0
	OrderTypeTime_ORDER_TIME_DAY           OrderTypeTime = 1
	OrderTypeTime_ORDER_TIME_SPECIFIED     OrderTypeTime = 2
	OrderTypeTime_ORDER_TIME_SPECIFIED_DAY OrderTypeTime = 3
)

var OrderTypeTime_name = map[int32]string{
	0: "ORDER_TIME_GTC",
	1: "ORDER_TIME_DAY",
	2: "ORDER_TIME_SPECIFIED",
	3: "ORDER_TIME_SPECIFIED_DAY",
}

var OrderTypeTime_value = map[string]int32{
	"ORDER_TIME_GTC":           0,
	"ORDER_TIME_DAY":           1,
	"ORDER_TIME_SPECIFIED":     2,
	"ORDER_TIME_SPECIFIED_DAY": 3,
}

func (x OrderTypeTime) String() string {
	return proto.EnumName(OrderTypeTime_name, int32(x))
}

func (OrderTypeTime) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

// Order represents an trade order
type Order struct {
	OrderId              int32                `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	AccountId            int32                `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OrderNumber          int32                `protobuf:"varint,3,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	Ticket               int32                `protobuf:"varint,4,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Symbol               string               `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimeSetup            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time_setup,json=timeSetup,proto3" json:"time_setup,omitempty"`
	OrderType            OrderType            `protobuf:"varint,7,opt,name=order_type,json=orderType,proto3,enum=mql5_background.v1.OrderType" json:"order_type,omitempty"`
	State                OrderState           `protobuf:"varint,8,opt,name=state,proto3,enum=mql5_background.v1.OrderState" json:"state,omitempty"`
	TimeExpiration       *timestamp.Timestamp `protobuf:"bytes,9,opt,name=time_expiration,json=timeExpiration,proto3" json:"time_expiration,omitempty"`
	TimeDone             *timestamp.Timestamp `protobuf:"bytes,10,opt,name=time_done,json=timeDone,proto3" json:"time_done,omitempty"`
	TypeFilling          OrderFillingType     `protobuf:"varint,11,opt,name=type_filling,json=typeFilling,proto3,enum=mql5_background.v1.OrderFillingType" json:"type_filling,omitempty"`
	TypeTime             OrderTypeTime        `protobuf:"varint,12,opt,name=type_time,json=typeTime,proto3,enum=mql5_background.v1.OrderTypeTime" json:"type_time,omitempty"`
	Magic                int32                `protobuf:"varint,13,opt,name=magic,proto3" json:"magic,omitempty"`
	PositionId           int32                `protobuf:"varint,14,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	VolumeInitial        float64              `protobuf:"fixed64,15,opt,name=volume_initial,json=volumeInitial,proto3" json:"volume_initial,omitempty"`
	VolumeCurrent        float64              `protobuf:"fixed64,16,opt,name=volume_current,json=volumeCurrent,proto3" json:"volume_current,omitempty"`
	PriceOpen            float64              `protobuf:"fixed64,17,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`
	StopLoss             float64              `protobuf:"fixed64,18,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	TakeProfit           float64              `protobuf:"fixed64,19,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	PriceCurrent         float64              `protobuf:"fixed64,20,opt,name=price_current,json=priceCurrent,proto3" json:"price_current,omitempty"`
	PriceStopLimit       float64              `protobuf:"fixed64,21,opt,name=price_stop_limit,json=priceStopLimit,proto3" json:"price_stop_limit,omitempty"`
	Comment              string               `protobuf:"bytes,22,opt,name=comment,proto3" json:"comment,omitempty"`
	ExternalId           string               `protobuf:"bytes,23,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrderId() int32 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Order) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Order) GetOrderNumber() int32 {
	if m != nil {
		return m.OrderNumber
	}
	return 0
}

func (m *Order) GetTicket() int32 {
	if m != nil {
		return m.Ticket
	}
	return 0
}

func (m *Order) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Order) GetTimeSetup() *timestamp.Timestamp {
	if m != nil {
		return m.TimeSetup
	}
	return nil
}

func (m *Order) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_ORDER_TYPE_BUY
}

func (m *Order) GetState() OrderState {
	if m != nil {
		return m.State
	}
	return OrderState_ORDER_STATE_STARTED
}

func (m *Order) GetTimeExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.TimeExpiration
	}
	return nil
}

func (m *Order) GetTimeDone() *timestamp.Timestamp {
	if m != nil {
		return m.TimeDone
	}
	return nil
}

func (m *Order) GetTypeFilling() OrderFillingType {
	if m != nil {
		return m.TypeFilling
	}
	return OrderFillingType_ORDER_FILLING_FOK
}

func (m *Order) GetTypeTime() OrderTypeTime {
	if m != nil {
		return m.TypeTime
	}
	return OrderTypeTime_ORDER_TIME_GTC
}

func (m *Order) GetMagic() int32 {
	if m != nil {
		return m.Magic
	}
	return 0
}

func (m *Order) GetPositionId() int32 {
	if m != nil {
		return m.PositionId
	}
	return 0
}

func (m *Order) GetVolumeInitial() float64 {
	if m != nil {
		return m.VolumeInitial
	}
	return 0
}

func (m *Order) GetVolumeCurrent() float64 {
	if m != nil {
		return m.VolumeCurrent
	}
	return 0
}

func (m *Order) GetPriceOpen() float64 {
	if m != nil {
		return m.PriceOpen
	}
	return 0
}

func (m *Order) GetStopLoss() float64 {
	if m != nil {
		return m.StopLoss
	}
	return 0
}

func (m *Order) GetTakeProfit() float64 {
	if m != nil {
		return m.TakeProfit
	}
	return 0
}

func (m *Order) GetPriceCurrent() float64 {
	if m != nil {
		return m.PriceCurrent
	}
	return 0
}

func (m *Order) GetPriceStopLimit() float64 {
	if m != nil {
		return m.PriceStopLimit
	}
	return 0
}

func (m *Order) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Order) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func init() {
	proto.RegisterEnum("mql5_background.v1.OrderType", OrderType_name, OrderType_value)
	proto.RegisterEnum("mql5_background.v1.OrderState", OrderState_name, OrderState_value)
	proto.RegisterEnum("mql5_background.v1.OrderFillingType", OrderFillingType_name, OrderFillingType_value)
	proto.RegisterEnum("mql5_background.v1.OrderTypeTime", OrderTypeTime_name, OrderTypeTime_value)
	proto.RegisterType((*Order)(nil), "mql5_background.v1.Order")
}

func init() {
	proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077)
}

var fileDescriptor_cd01338c35d87077 = []byte{
	// 826 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0xeb, 0x6e, 0xe3, 0x44,
	0x14, 0x26, 0x69, 0x73, 0xf1, 0x49, 0x9b, 0x7a, 0xa7, 0xb7, 0xd9, 0xc2, 0xee, 0xb2, 0x5c, 0xa4,
	0x55, 0x7f, 0x64, 0xc5, 0x02, 0x42, 0x48, 0x08, 0x29, 0x38, 0x4e, 0x65, 0x70, 0x9b, 0x60, 0xbb,
	0x12, 0xe1, 0x8f, 0x95, 0x8b, 0x1b, 0x59, 0xb5, 0x3d, 0xc6, 0x71, 0x56, 0xbb, 0x6f, 0xc2, 0x93,
	0xf0, 0x64, 0x3c, 0x00, 0x67, 0xce, 0xd8, 0xdd, 0xc4, 0xdb, 0xd2, 0x3f, 0x55, 0xe6, 0xbb, 0xcd,
	0xf9, 0xc6, 0x33, 0x85, 0x8e, 0xc8, 0x16, 0x41, 0xd6, 0x4b, 0x33, 0x91, 0x0b, 0xc6, 0xe2, 0xbf,
	0xa2, 0xef, 0xfd, 0xd9, 0x74, 0x7e, 0xbb, 0xcc, 0xc4, 0x3a, 0x59, 0xf4, 0xde, 0x7e, 0x73, 0xf6,
	0x62, 0x29, 0xc4, 0x32, 0x0a, 0x5e, 0x93, 0x62, 0xb6, 0xbe, 0x79, 0x9d, 0x87, 0x71, 0xb0, 0xca,
	0xa7, 0x71, 0xaa, 0x4c, 0x5f, 0xfc, 0xd3, 0x82, 0xc6, 0x48, 0x86, 0xb0, 0xa7, 0xd0, 0xa6, 0x34,
	0x3f, 0x5c, 0xf0, 0xda, 0xe7, 0xb5, 0x57, 0x0d, 0xa7, 0x45, 0x6b, 0x6b, 0xc1, 0x9e, 0x01, 0x4c,
	0xe7, 0x73, 0xcc, 0xcc, 0x25, 0x59, 0x27, 0x52, 0x2b, 0x10, 0xa4, 0x5f, 0xc2, 0x9e, 0x72, 0x26,
	0xeb, 0x78, 0x16, 0x64, 0x7c, 0x87, 0x04, 0x6a, 0xb6, 0x2b, 0x82, 0xd8, 0x09, 0x34, 0xf3, 0x70,
	0x7e, 0x1b, 0xe4, 0x7c, 0x97, 0xc8, 0x62, 0x25, 0xf1, 0xd5, 0xfb, 0x78, 0x26, 0x22, 0xde, 0x40,
	0x5c, 0x73, 0x8a, 0x15, 0xfb, 0x11, 0x40, 0x4e, 0xea, 0xaf, 0x82, 0x7c, 0x9d, 0xf2, 0x26, 0x72,
	0x9d, 0x37, 0x67, 0x3d, 0x55, 0xa6, 0x57, 0x96, 0xe9, 0x79, 0x65, 0x19, 0x47, 0x93, 0x6a, 0x57,
	0x8a, 0xd9, 0x4f, 0x00, 0x6a, 0x9a, 0xfc, 0x7d, 0x1a, 0xf0, 0x16, 0x5a, 0xbb, 0x6f, 0x9e, 0xf5,
	0x3e, 0x3e, 0x9b, 0x1e, 0xd5, 0xf6, 0x50, 0xe4, 0x68, 0xa2, 0xfc, 0xc9, 0xbe, 0x83, 0x06, 0x26,
	0xe6, 0x01, 0x6f, 0x93, 0xf1, 0xf9, 0x83, 0x46, 0x57, 0xaa, 0x1c, 0x25, 0x66, 0x06, 0x1c, 0xd0,
	0xb8, 0xc1, 0xbb, 0x34, 0xcc, 0xa6, 0x79, 0x28, 0x12, 0xae, 0x3d, 0x3a, 0x73, 0x57, 0x5a, 0xcc,
	0x3b, 0x07, 0xfb, 0x01, 0xa8, 0x85, 0xbf, 0x10, 0x49, 0xc0, 0xe1, 0x51, 0x7b, 0x5b, 0x8a, 0x07,
	0xa8, 0x65, 0x17, 0xb0, 0x27, 0xbb, 0xfa, 0x37, 0x61, 0x14, 0x85, 0xc9, 0x92, 0x77, 0x68, 0xf4,
	0xaf, 0x1e, 0x1c, 0x7d, 0xa8, 0x74, 0x54, 0xbd, 0x23, 0x9d, 0x05, 0xc0, 0x7e, 0xc6, 0x09, 0x64,
	0x90, 0x4c, 0xe6, 0x7b, 0x94, 0xf2, 0xf2, 0x7f, 0x4f, 0x4e, 0x4e, 0x83, 0x83, 0x14, 0xbf, 0xd8,
	0x11, 0x34, 0xe2, 0xe9, 0x32, 0x9c, 0xf3, 0x7d, 0xfa, 0xc8, 0x6a, 0xc1, 0x5e, 0x40, 0x27, 0x15,
	0xab, 0x50, 0x76, 0x94, 0xd7, 0xa7, 0x4b, 0x1c, 0x94, 0x10, 0xde, 0x9f, 0xaf, 0xa1, 0xfb, 0x56,
	0x44, 0x6b, 0xac, 0x1e, 0x26, 0x88, 0x4d, 0x23, 0x7e, 0x80, 0x9a, 0x9a, 0xb3, 0xaf, 0x50, 0x4b,
	0x81, 0x1b, 0xb2, 0xf9, 0x3a, 0xcb, 0x82, 0x24, 0xe7, 0xfa, 0xa6, 0xcc, 0x50, 0xa0, 0xbc, 0xac,
	0x69, 0x16, 0xce, 0x03, 0x5f, 0xa4, 0x41, 0xc2, 0x9f, 0x90, 0x44, 0x23, 0x64, 0x84, 0x00, 0xfb,
	0x14, 0xb4, 0x55, 0x2e, 0x52, 0x3f, 0x12, 0xab, 0x15, 0x67, 0xc4, 0xb6, 0x25, 0x60, 0xe3, 0x5a,
	0x8e, 0x9a, 0x4f, 0x6f, 0x03, 0x1f, 0x8f, 0xfb, 0x26, 0xcc, 0xf9, 0x21, 0xd1, 0x20, 0xa1, 0x31,
	0x21, 0xec, 0x4b, 0xd8, 0x57, 0xe1, 0xe5, 0x08, 0x47, 0x24, 0xd9, 0x23, 0xb0, 0x9c, 0xe0, 0x15,
	0xe8, 0x4a, 0xa4, 0x36, 0x0a, 0x63, 0x8c, 0x3a, 0x26, 0x5d, 0x97, 0x70, 0x57, 0x6e, 0x27, 0x51,
	0xc6, 0xa1, 0x35, 0x17, 0x71, 0x2c, 0x83, 0x4e, 0xe8, 0xfe, 0x97, 0x4b, 0x39, 0x49, 0xf0, 0x2e,
	0x0f, 0xb2, 0x64, 0x1a, 0xc9, 0x43, 0x3b, 0x25, 0x16, 0x4a, 0xc8, 0x5a, 0x9c, 0xff, 0x5b, 0x03,
	0xed, 0xee, 0x3b, 0x30, 0x06, 0xdd, 0x91, 0x33, 0x30, 0x1d, 0xdf, 0x9b, 0x8c, 0x4d, 0xff, 0x97,
	0xeb, 0x89, 0xfe, 0x09, 0x3b, 0x84, 0x83, 0x0d, 0xcc, 0x35, 0x6d, 0x5b, 0xaf, 0xe1, 0x8e, 0x47,
	0xdb, 0x42, 0xdf, 0xb6, 0x2e, 0x2d, 0x4f, 0xaf, 0xe3, 0xfb, 0x3f, 0xae, 0xc8, 0x0b, 0x6a, 0x87,
	0x9d, 0xc2, 0x61, 0xc5, 0xe4, 0x7a, 0xa3, 0xb1, 0xbe, 0x5b, 0x49, 0x23, 0x0f, 0x31, 0x0d, 0xfc,
	0x0a, 0x4f, 0xef, 0xb1, 0x14, 0x89, 0x4d, 0xf6, 0x1c, 0xce, 0xee, 0x33, 0x16, 0x7c, 0xab, 0xb2,
	0xa3, 0x61, 0x8f, 0x5c, 0x0c, 0x99, 0xe8, 0xed, 0xf3, 0xbf, 0xeb, 0x00, 0x1f, 0xde, 0xdf, 0x07,
	0x9d, 0xeb, 0xf5, 0x3d, 0x53, 0xfe, 0x75, 0x3c, 0x73, 0x80, 0xe5, 0x4f, 0x80, 0x6d, 0x12, 0x63,
	0xbb, 0x6f, 0x20, 0xbe, 0xd1, 0x5f, 0xe1, 0x46, 0xff, 0xca, 0x30, 0x6d, 0x64, 0xea, 0xd5, 0xa8,
	0x31, 0x26, 0x59, 0x7d, 0x1b, 0xdb, 0x57, 0xa2, 0x86, 0x96, 0x2d, 0x0d, 0xbb, 0xd5, 0x28, 0xc7,
	0xfc, 0xd5, 0x34, 0xe4, 0xe6, 0x8d, 0x6a, 0x94, 0xf9, 0xc7, 0xd8, 0x72, 0x90, 0x68, 0xe2, 0xe5,
	0x3b, 0xdd, 0xb6, 0xfc, 0x7e, 0x6d, 0xba, 0x9e, 0xdf, 0x1f, 0x0c, 0xb0, 0xf3, 0xdd, 0x99, 0x6c,
	0x93, 0x97, 0xa3, 0x81, 0x35, 0xc4, 0xea, 0x0f, 0xf1, 0xaa, 0x82, 0xae, 0x9d, 0xff, 0x09, 0x7a,
	0xf5, 0x79, 0xb3, 0x63, 0x78, 0xa2, 0x3c, 0x72, 0x6a, 0xeb, 0xea, 0xc2, 0x1f, 0x8e, 0x7e, 0xc3,
	0xd3, 0xf9, 0x08, 0xb6, 0x46, 0xc6, 0xe6, 0xe1, 0x94, 0xb0, 0x63, 0x7a, 0xd7, 0xce, 0x95, 0x5e,
	0x3f, 0x17, 0xb0, 0xbf, 0xf5, 0xe8, 0x37, 0x2e, 0x9c, 0x75, 0x69, 0xfa, 0x17, 0x9e, 0x81, 0xa9,
	0xdb, 0xd8, 0xa0, 0x3f, 0xd9, 0xba, 0x6f, 0x12, 0x73, 0xc7, 0xa6, 0x61, 0x0d, 0x2d, 0x3a, 0xef,
	0xcf, 0x80, 0xdf, 0xc7, 0x90, 0x6f, 0x67, 0xd6, 0xa4, 0xff, 0x78, 0xdf, 0xfe, 0x17, 0x00, 0x00,
	0xff, 0xff, 0xb6, 0x79, 0x18, 0x10, 0xe2, 0x06, 0x00, 0x00,
}
