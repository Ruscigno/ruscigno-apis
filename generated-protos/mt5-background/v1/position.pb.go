// Code generated by protoc-gen-go. DO NOT EDIT.
// source: position.proto

package mql5_background_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PositionType: Position Type
type PositionType int32

const (
	PositionType_POSITION_TYPE_BUY  PositionType = 0
	PositionType_POSITION_TYPE_SELL PositionType = 1
)

var PositionType_name = map[int32]string{
	0: "POSITION_TYPE_BUY",
	1: "POSITION_TYPE_SELL",
}

var PositionType_value = map[string]int32{
	"POSITION_TYPE_BUY":  0,
	"POSITION_TYPE_SELL": 1,
}

func (x PositionType) String() string {
	return proto.EnumName(PositionType_name, int32(x))
}

func (PositionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56e266f1a28a7893, []int{0}
}

// Position: Execution of trade operations results in the opening of a position
type Position struct {
	OrderId              int32                `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	AccountId            int32                `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PositionNumber       int32                `protobuf:"varint,3,opt,name=position_number,json=positionNumber,proto3" json:"position_number,omitempty"`
	Ticket               int32                `protobuf:"varint,4,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Symbol               string               `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	PositionType         PositionType         `protobuf:"varint,7,opt,name=position_type,json=positionType,proto3,enum=mql5_background.v1.PositionType" json:"position_type,omitempty"`
	Volume               float64              `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	PriceOpen            float64              `protobuf:"fixed64,9,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`
	StopLoss             float64              `protobuf:"fixed64,10,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	TakeProfit           float64              `protobuf:"fixed64,11,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	PriceCurrent         float64              `protobuf:"fixed64,12,opt,name=price_current,json=priceCurrent,proto3" json:"price_current,omitempty"`
	Commission           float64              `protobuf:"fixed64,13,opt,name=commission,proto3" json:"commission,omitempty"`
	Swap                 float64              `protobuf:"fixed64,14,opt,name=swap,proto3" json:"swap,omitempty"`
	Profit               float64              `protobuf:"fixed64,15,opt,name=profit,proto3" json:"profit,omitempty"`
	Identifier           int32                `protobuf:"varint,16,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Comment              string               `protobuf:"bytes,17,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_56e266f1a28a7893, []int{0}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetOrderId() int32 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Position) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Position) GetPositionNumber() int32 {
	if m != nil {
		return m.PositionNumber
	}
	return 0
}

func (m *Position) GetTicket() int32 {
	if m != nil {
		return m.Ticket
	}
	return 0
}

func (m *Position) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Position) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Position) GetPositionType() PositionType {
	if m != nil {
		return m.PositionType
	}
	return PositionType_POSITION_TYPE_BUY
}

func (m *Position) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Position) GetPriceOpen() float64 {
	if m != nil {
		return m.PriceOpen
	}
	return 0
}

func (m *Position) GetStopLoss() float64 {
	if m != nil {
		return m.StopLoss
	}
	return 0
}

func (m *Position) GetTakeProfit() float64 {
	if m != nil {
		return m.TakeProfit
	}
	return 0
}

func (m *Position) GetPriceCurrent() float64 {
	if m != nil {
		return m.PriceCurrent
	}
	return 0
}

func (m *Position) GetCommission() float64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *Position) GetSwap() float64 {
	if m != nil {
		return m.Swap
	}
	return 0
}

func (m *Position) GetProfit() float64 {
	if m != nil {
		return m.Profit
	}
	return 0
}

func (m *Position) GetIdentifier() int32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func (m *Position) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterEnum("mql5_background.v1.PositionType", PositionType_name, PositionType_value)
	proto.RegisterType((*Position)(nil), "mql5_background.v1.Position")
}

func init() {
	proto.RegisterFile("position.proto", fileDescriptor_56e266f1a28a7893)
}

var fileDescriptor_56e266f1a28a7893 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x4f, 0x6f, 0x13, 0x31,
	0x10, 0xc5, 0x09, 0xa4, 0x49, 0x76, 0x92, 0xa6, 0xa9, 0x25, 0x90, 0x29, 0x82, 0x56, 0x70, 0x00,
	0x71, 0xd8, 0x8a, 0x22, 0x8e, 0x5c, 0x40, 0x39, 0x44, 0x8a, 0x9a, 0x68, 0x1b, 0x0e, 0x3d, 0xad,
	0xf6, 0x8f, 0x13, 0x59, 0xd9, 0x5d, 0x1b, 0xdb, 0x5b, 0xd4, 0xef, 0xc5, 0x07, 0x64, 0x3c, 0xbb,
	0x1b, 0x82, 0xb8, 0xf9, 0xfd, 0xde, 0x78, 0xfc, 0xc6, 0x03, 0x53, 0xad, 0xac, 0x74, 0x52, 0x55,
	0xa1, 0x36, 0xca, 0x29, 0xc6, 0xca, 0x9f, 0xc5, 0x97, 0x38, 0x4d, 0xb2, 0xfd, 0xce, 0xa8, 0xba,
	0xca, 0xc3, 0x87, 0x4f, 0x17, 0x97, 0x3b, 0xa5, 0x76, 0x85, 0xb8, 0xa6, 0x8a, 0xb4, 0xde, 0x5e,
	0x3b, 0x59, 0x0a, 0xeb, 0x92, 0x52, 0x37, 0x97, 0xde, 0xfe, 0xee, 0xc3, 0x68, 0xdd, 0xf6, 0x61,
	0x2f, 0x61, 0xa4, 0x4c, 0x2e, 0x4c, 0x2c, 0x73, 0xde, 0xbb, 0xea, 0x7d, 0x38, 0x89, 0x86, 0xa4,
	0x17, 0x39, 0x7b, 0x0d, 0x90, 0x64, 0x19, 0xb6, 0x75, 0xde, 0x7c, 0x4a, 0x66, 0xd0, 0x12, 0xb4,
	0xdf, 0xc3, 0x59, 0x97, 0x26, 0xae, 0xea, 0x32, 0x15, 0x86, 0x3f, 0xa3, 0x9a, 0x43, 0xc8, 0x5b,
	0xa2, 0xec, 0x05, 0x0c, 0x9c, 0xcc, 0xf6, 0xc2, 0xf1, 0x3e, 0xf9, 0xad, 0xf2, 0xdc, 0x3e, 0x96,
	0xa9, 0x2a, 0xf8, 0x09, 0xf2, 0x20, 0x6a, 0x15, 0x0b, 0xa1, 0xef, 0x23, 0xf3, 0x01, 0xd2, 0xf1,
	0xcd, 0x45, 0xd8, 0xcc, 0x13, 0x76, 0xf3, 0x84, 0x9b, 0x6e, 0x9e, 0x88, 0xea, 0xd8, 0x1c, 0x4e,
	0x0f, 0x41, 0xdc, 0xa3, 0x16, 0x7c, 0x88, 0x17, 0xa7, 0x37, 0x57, 0xe1, 0xff, 0x9f, 0x13, 0x76,
	0x73, 0x6f, 0xb0, 0x2e, 0x9a, 0xe8, 0x23, 0xe5, 0xe3, 0x3c, 0xa8, 0xa2, 0xc6, 0x87, 0x47, 0x78,
	0xbf, 0x17, 0xb5, 0xca, 0x7f, 0x83, 0x36, 0x32, 0x13, 0xb1, 0xd2, 0xa2, 0xe2, 0x01, 0x79, 0x01,
	0x91, 0x15, 0x02, 0xf6, 0x0a, 0x02, 0xeb, 0x94, 0x8e, 0x0b, 0x65, 0x2d, 0x07, 0x72, 0x47, 0x1e,
	0x2c, 0x51, 0xb3, 0x4b, 0x18, 0xbb, 0x64, 0x2f, 0x62, 0xcc, 0xbe, 0x95, 0x8e, 0x8f, 0xc9, 0x06,
	0x8f, 0xd6, 0x44, 0xd8, 0x3b, 0xcc, 0x4e, 0xcd, 0xb3, 0xda, 0x18, 0x51, 0x39, 0x3e, 0xa1, 0x92,
	0x09, 0xc1, 0xef, 0x0d, 0x63, 0x6f, 0x00, 0x32, 0x55, 0x96, 0xd2, 0x5a, 0xcc, 0xca, 0x4f, 0x9b,
	0x26, 0x7f, 0x09, 0x63, 0xd0, 0xb7, 0xbf, 0x12, 0xcd, 0xa7, 0xe4, 0xd0, 0xd9, 0x4f, 0xd3, 0x3e,
	0x7a, 0xd6, 0x4c, 0xd3, 0x28, 0xdf, 0x4b, 0xe6, 0xd8, 0x54, 0x6e, 0x25, 0x2e, 0x6c, 0x46, 0x0b,
	0x39, 0x22, 0x8c, 0xc3, 0xd0, 0x77, 0xf6, 0x51, 0xce, 0x69, 0x2b, 0x9d, 0xfc, 0xf8, 0x15, 0x26,
	0xc7, 0xbf, 0xc7, 0x9e, 0xc3, 0xf9, 0x7a, 0x75, 0xb7, 0xd8, 0x2c, 0x56, 0xb7, 0xf1, 0xe6, 0x7e,
	0x3d, 0x8f, 0xbf, 0xfd, 0xb8, 0x9f, 0x3d, 0xc1, 0x87, 0xd9, 0xbf, 0xf8, 0x6e, 0xbe, 0x5c, 0xce,
	0x7a, 0xe9, 0x80, 0xf6, 0xf7, 0xf9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x12, 0x2d, 0x51,
	0xc3, 0x02, 0x00, 0x00,
}
