syntax = "proto3";

package tickerbeats.v1;

option go_package = "ticker-beats/v1";

// DealType: Deal type
enum DealType {
    DEAL_TYPE_BUY                      = 0;  //Buy
    DEAL_TYPE_SELL                     = 1;  //Sell
    DEAL_TYPE_BALANCE                  = 2;  //Balance
    DEAL_TYPE_CREDIT                   = 3;  //Credit
    DEAL_TYPE_CHARGE                   = 4;  //Additional charge
    DEAL_TYPE_CORRECTION               = 5;  //Correction
    DEAL_TYPE_BONUS                    = 6;  //Bonus
    DEAL_TYPE_COMMISSION               = 7;  //Additional commission
    DEAL_TYPE_COMMISSION_DAILY         = 8;  //Daily commission
    DEAL_TYPE_COMMISSION_MONTHLY       = 9;  //Monthly commission
    DEAL_TYPE_COMMISSION_AGENT_DAILY   = 10; //Daily agent commission
    DEAL_TYPE_COMMISSION_AGENT_MONTHLY = 11; //Monthly agent commission
    DEAL_TYPE_INTEREST                 = 12; //Interest rate
    DEAL_TYPE_BUY_CANCELED             = 13; //Canceled buy deal.
    DEAL_TYPE_SELL_CANCELED            = 14; //Canceled sell deal.
    DEAL_DIVIDEND                      = 15; //Dividend operations
    DEAL_DIVIDEND_FRANKED              = 16; //Franked (non-taxable) dividend operations
    DEAL_TAX                           = 17; //Tax charges
}

// DealEntry: Deal entry - entry in, entry out, reverse
enum DealEntry {
    DEAL_ENTRY_IN     = 0; //Entry in
    DEAL_ENTRY_OUT    = 1; //Entry out
    DEAL_ENTRY_INOUT  = 2; //Reverse
    DEAL_ENTRY_OUT_BY = 3; //Close a position by an opposite one
}

enum DealReason {
    DEAL_REASON_CLIENT   = 0; //The deal was executed as a result of activation of an order placed from a desktop terminal
    DEAL_REASON_MOBILE   = 1; //The deal was executed as a result of activation of an order placed from a mobile application
    DEAL_REASON_WEB      = 2; //The deal was executed as a result of activation of an order placed from the web platform
    DEAL_REASON_EXPERT   = 3; //The deal was executed as a result of activation of an order placed from an MQL5 program, i.e. an Expert Advisor or a script
    DEAL_REASON_SL       = 4; //The deal was executed as a result of Stop Loss activation
    DEAL_REASON_TP       = 5; //The deal was executed as a result of Take Profit activation
    DEAL_REASON_SO       = 6; //The deal was executed as a result of the Stop Out event
    DEAL_REASON_ROLLOVER = 7; //The deal was executed due to a rollover
    DEAL_REASON_VMARGIN  = 8; //The deal was executed after charging the variation margin
    DEAL_REASON_SPLIT    = 9; //The deal was executed after the split (price reduction) of an instrument, which had an open position during split announcement

}

// Deal: A deal is the reflection of the fact of a trade operation execution based on an order that contains a trade request
message Deal { 
    int64     deal_id       = 1;
    int64     account_id    = 2;
    int64     ticket        = 3;
    int64     magic         = 4;
    int64     order_id      = 5;
    string    symbol        = 6;
    int64     deal_time     = 7; 
    DealType  deal_type     = 8;
    DealEntry entry         = 9;
    int64     position_id   = 10;
    double    volume        = 11;
    double    price         = 12;
    double    commission    = 13;
    double    swap          = 14;
    double    profit        = 15;
    string    comment       = 16;
    string    external_id   = 17;
    int64     created       = 18;
    int64     updated       = 19;
    int64     deleted       = 20;
    int64     reason        = 21;
    double    deal_fee      = 22;
    int64     TimeGMTOffset = 23;
}