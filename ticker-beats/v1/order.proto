syntax = "proto3";

package tickerbeats.v1;

option go_package = "ticker-beats/v1";

// OrderType: Order type
enum OrderType {
    ORDER_TYPE_BUY             = 0; //Market Buy order
    ORDER_TYPE_SELL            = 1; //Market Sell order
    ORDER_TYPE_BUY_LIMIT       = 2; //Buy Limit pending order
    ORDER_TYPE_SELL_LIMIT      = 3; //Sell Limit pending order
    ORDER_TYPE_BUY_STOP        = 4; //Buy Stop pending order
    ORDER_TYPE_SELL_STOP       = 5; //Sell Stop pending order
    ORDER_TYPE_BUY_STOP_LIMIT  = 6; //Upon reaching the order price, a pending Buy Limit order is placed at the StopLimit price
    ORDER_TYPE_SELL_STOP_LIMIT = 7; //Upon reaching the order price, a pending Sell Limit order is placed at the StopLimit price
    ORDER_TYPE_CLOSE_BY        = 8; //Order to close a position by an opposite one
}

// OrderType: Order state
enum OrderState {
    ORDER_STATE_STARTED        = 0; //Order checked, but not yet accepted by broker
    ORDER_STATE_PLACED         = 1; //Order accepted
    ORDER_STATE_CANCELED       = 2; //Order canceled by client
    ORDER_STATE_PARTIAL        = 3; //Order partially executed
    ORDER_STATE_FILLED         = 4; //Order fully executed
    ORDER_STATE_REJECTED       = 5; //Order rejected
    ORDER_STATE_EXPIRED        = 6; //Order expired
    ORDER_STATE_REQUEST_ADD    = 7; //Order is being registered (placing to the trading system)
    ORDER_STATE_REQUEST_MODIFY = 8; //Order is being modified (changing its parameters)
    ORDER_STATE_REQUEST_CANCEL = 9; //Order is being deleted (deleting from the trading system)
}

// OrderFillingType: Order filling type
enum OrderFillingType {
    ORDER_FILLING_FOK    = 0; //This filling policy means that an order can be filled only in the specified amount.
    ORDER_FILLING_IOC    = 1; //This mode means that a trader agrees to execute a deal with the volume maximally available in the market within that indicated in the order.
    ORDER_FILLING_RETURN = 2; //This policy is used only for market orders (ORDER_TYPE_BUY and ORDER_TYPE_SELL), limit and stop limit orders (ORDER_TYPE_BUY_LIMIT, ORDER_TYPE_SELL_LIMIT, ORDER_TYPE_BUY_STOP_LIMIT and ORDER_TYPE_SELL_STOP_LIMIT ) and only for the symbols with Market or Exchange execution.
}

// OrderTypeTime: Order lifetime
enum OrderTypeTime {
    ORDER_TIME_GTC           = 0; //Good till cancel order
    ORDER_TIME_DAY           = 1; //Good till current trade day order
    ORDER_TIME_SPECIFIED     = 2; //Good till expired order
    ORDER_TIME_SPECIFIED_DAY = 3; //The order will be effective till 23:59:59 of the specified day.
}

// OrderReason: The reason for order placing. An order can be placed by an MQL5 program, from a mobile application, as a result of StopOut, etc.
enum OrderReason {
    ORDER_REASON_CLIENT = 0; //The order was placed from a desktop terminal
    ORDER_REASON_MOBILE = 1; //The order was placed from a mobile application
    ORDER_REASON_WEB    = 2; //The order was placed from a web platform
    ORDER_REASON_EXPERT = 3; //The order was placed from an MQL5-program, i.e. by an Expert Advisor or a script
    ORDER_REASON_SL     = 4; //The order was placed as a result of Stop Loss activation
    ORDER_REASON_TP     = 5; //The order was placed as a result of Take Profit activation
    ORDER_REASON_SO     = 6; //The order was placed as a result of the Stop Out event
}

// Order represents an trade order
message Order {
    int64            order_id         = 1;
    int64            account_id       = 2;
    int64            ticket           = 3;
    string           symbol           = 4;
    int64            time_setup       = 5;
    OrderType        order_type       = 6;
    OrderState       state            = 7;
    int64            time_expiration  = 8;
    int64            time_done        = 9;
    OrderFillingType type_filling     = 10;
    OrderTypeTime    type_time        = 11;
    int64            magic            = 12;
    int64            position_id      = 13;
    OrderReason      reason           = 14;
    double           volume_initial   = 15;
    double           volume_current   = 16;
    double           price_open       = 17;
    double           stop_loss        = 18;
    double           take_profit      = 19;
    double           price_current    = 20;
    double           price_stop_limit = 21;
    string           comment          = 22;
    string           external_id      = 23;
    int64            created          = 24;
    int64            updated          = 25;
    int64            deleted          = 26;
    int64            position_by_id   = 27;
    bool             direction        = 28;
    int64            TimeGMTOffset    = 29;
    string           provider_id      = 30;
    string           internal_id      = 31;
}