// Copyright 2021 Sander Ruscigno
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package mql5_background.v1;

import "google/protobuf/timestamp.proto";

// DealType: Deal type
enum DealType {
	DEAL_TYPE_BUY                      = 0;  //Buy
	DEAL_TYPE_SELL                     = 1;  //Sell
	DEAL_TYPE_BALANCE                  = 2;  //Balance
	DEAL_TYPE_CREDIT                   = 3;  //Credit
	DEAL_TYPE_CHARGE                   = 4;  //Additional charge
	DEAL_TYPE_CORRECTION               = 5;  //Correction
	DEAL_TYPE_BONUS                    = 6;  //Bonus
	DEAL_TYPE_COMMISSION               = 7;  //Additional commission
	DEAL_TYPE_COMMISSION_DAILY         = 8;  //Daily commission
	DEAL_TYPE_COMMISSION_MONTHLY       = 9;  //Monthly commission
	DEAL_TYPE_COMMISSION_AGENT_DAILY   = 10; //Daily agent commission
	DEAL_TYPE_COMMISSION_AGENT_MONTHLY = 11; //Monthly agent commission
	DEAL_TYPE_INTEREST                 = 12; //Interest rate
	DEAL_TYPE_BUY_CANCELED             = 13; //Canceled buy deal. 
	DEAL_TYPE_SELL_CANCELED            = 14; //Canceled sell deal.
	DEAL_DIVIDEND                      = 15; //Dividend operations
	DEAL_DIVIDEND_FRANKED              = 16; //Franked (non-taxable) dividend operations
	DEAL_TAX                           = 17; //Tax charges
}

// DealEntry: Deal entry - entry in, entry out, reverse
enum DealEntry {
	DEAL_ENTRY_IN     = 0; //Entry in
	DEAL_ENTRY_OUT    = 1; //Entry out
	DEAL_ENTRY_INOUT  = 2; //Reverse
	DEAL_ENTRY_OUT_BY = 3; //Close a position by an opposite one
}

// Deal: A deal is the reflection of the fact of a trade operation execution based on an order that contains a trade request
message Deal { 
	int64                     deal_id     = 1;
	int64                     account_id  = 2;
	int64                     ticket      = 3;
	int64                     magic       = 4;
	int64                     order_id    = 5;
	string                    symbol      = 6;
	int64                     time        = 7; 
	DealType                  deal_type   = 8;
	DealEntry                 entry       = 9;
	int64                     position_id = 10;
	double                    volume      = 11;
	double                    price       = 12;
	double                    commission  = 13;
	double                    swap        = 14;
	double                    profit      = 15;
	string                    comment     = 16;
	string                    external_id = 17;
	google.protobuf.Timestamp created     = 18;
	google.protobuf.Timestamp updated     = 19;
	google.protobuf.Timestamp deleted     = 20;
}